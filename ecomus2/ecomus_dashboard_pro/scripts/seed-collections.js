const mongoose = require('mongoose');
const path = require('path');
require('dotenv').config({ path: path.join(__dirname, '../.env.local') });

// Import des mod√®les JavaScript pour le script de seed
const Collection = require('./models/Collection.js');
const Category = require('./models/Category.js');
const Store = require('./models/Store.js');
const Product = require('./models/Product.js');

// Donn√©es de collections bas√©es sur les donn√©es statiques
const collectionsData = [
  // Collections bas√©es sur collections8
  {
    title: "Men's Sneaker Collection",
    description: "D√©couvrez notre collection exclusive de sneakers pour hommes",
    imgSrc: "/images/collections/collection-1.jpg",
    altText: "Men's Sneaker Collection",
    heading: "Men's Sneaker",
    subheading: "Collection Exclusive",
    price: 89.99,
    backgroundColor: "#f8f9fa",
    featured: true,
    status: "active",
    categoryName: "Homme",
    seoTitle: "Collection Sneakers Homme - Chaussures de Sport",
    seoDescription: "D√©couvrez notre collection exclusive de sneakers pour hommes. Qualit√© premium et style moderne.",
    seoKeywords: ["sneakers", "homme", "chaussures", "sport", "mode"]
  },
  {
    title: "Men's Pants Collection",
    description: "Pantalons et jeans tendance pour hommes",
    imgSrc: "/images/collections/collection-2.jpg",
    altText: "Men's Pants Collection",
    heading: "Men's Pants",
    subheading: "Style & Confort",
    price: 65.99,
    backgroundColor: "#e9ecef",
    featured: true,
    status: "active",
    categoryName: "V√™tements",
    seoTitle: "Collection Pantalons Homme - Jeans & Chinos",
    seoDescription: "Pantalons et jeans de qualit√© pour hommes. Coupe moderne et mati√®res premium.",
    seoKeywords: ["pantalons", "jeans", "homme", "mode", "v√™tements"]
  },
  {
    title: "Men's Boot Collection",
    description: "Bottes et chaussures de ville √©l√©gantes",
    imgSrc: "/images/collections/collection-3.jpg",
    altText: "Men's Boot Collection",
    heading: "Men's Boot",
    subheading: "√âl√©gance & Durabilit√©",
    price: 129.99,
    backgroundColor: "#dee2e6",
    featured: false,
    status: "active",
    categoryName: "Homme",
    seoTitle: "Collection Bottes Homme - Chaussures de Ville",
    seoDescription: "Bottes et chaussures de ville pour hommes. Cuir de qualit√© et finitions soign√©es.",
    seoKeywords: ["bottes", "chaussures", "ville", "homme", "cuir"]
  },
  // Collections bas√©es sur collectionSlides3
  {
    title: "Bag Collection",
    description: "Sacs, sacoches et accessoires de maroquinerie",
    imgSrc: "/images/collections/collection-4.jpg",
    altText: "Bag Collection",
    heading: "Bag",
    subheading: "Maroquinerie Premium",
    price: 45.99,
    backgroundColor: "#f1f3f4",
    featured: true,
    status: "active",
    categoryName: "V√™tements",
    seoTitle: "Collection Sacs - Maroquinerie & Accessoires",
    seoDescription: "Sacs et accessoires de maroquinerie. Design moderne et mat√©riaux de qualit√©.",
    seoKeywords: ["sacs", "maroquinerie", "accessoires", "mode", "cuir"]
  },
  {
    title: "Cap Collection",
    description: "Casquettes et chapeaux tendance",
    imgSrc: "/images/collections/collection-5.jpg",
    altText: "Cap Collection",
    heading: "Cap",
    subheading: "Style Urbain",
    price: 25.99,
    backgroundColor: "#f8f9fa",
    featured: false,
    status: "active",
    categoryName: "V√™tements",
    seoTitle: "Collection Casquettes - Chapeaux & Accessoires",
    seoDescription: "Casquettes et chapeaux pour tous les styles. Qualit√© et confort garantis.",
    seoKeywords: ["casquettes", "chapeaux", "accessoires", "mode", "urbain"]
  },
  {
    title: "Earphones Collection",
    description: "√âcouteurs et accessoires audio haute qualit√©",
    imgSrc: "/images/collections/collection-6.jpg",
    altText: "Earphones Collection",
    heading: "Earphones",
    subheading: "Audio Premium",
    price: 79.99,
    backgroundColor: "#e9ecef",
    featured: true,
    status: "active",
    categoryName: "√âlectronique",
    seoTitle: "Collection √âcouteurs - Audio & Technologie",
    seoDescription: "√âcouteurs et accessoires audio de haute qualit√©. Son cristallin et design ergonomique.",
    seoKeywords: ["√©couteurs", "audio", "technologie", "musique", "son"]
  },
  // Collections suppl√©mentaires bas√©es sur recentItems2
  {
    title: "Summer Essentials",
    description: "Les indispensables de l'√©t√©",
    imgSrc: "/images/collections/summer-collection.jpg",
    altText: "Summer Essentials Collection",
    heading: "Summer Essentials",
    subheading: "√ât√© 2024",
    price: 39.99,
    backgroundColor: "#fff3cd",
    featured: true,
    status: "active",
    categoryName: "Homme",
    seoTitle: "Collection √ât√© - Essentiels Summer 2024",
    seoDescription: "Les indispensables de l'√©t√© 2024. Mode, confort et style pour la saison chaude.",
    seoKeywords: ["√©t√©", "summer", "essentiels", "mode", "2024"]
  },
  {
    title: "Winter Warmth",
    description: "Collection hiver pour rester au chaud",
    imgSrc: "/images/collections/winter-collection.jpg",
    altText: "Winter Warmth Collection",
    heading: "Winter Warmth",
    subheading: "Hiver 2024",
    price: 99.99,
    backgroundColor: "#d1ecf1",
    featured: false,
    status: "active",
    categoryName: "Homme",
    seoTitle: "Collection Hiver - Chaleur & Confort 2024",
    seoDescription: "Collection hiver pour rester au chaud. V√™tements et accessoires pour l'hiver 2024.",
    seoKeywords: ["hiver", "winter", "chaud", "confort", "2024"]
  }
];

async function connectDB() {
  try {
    if (!process.env.MONGODB_URI) {
      throw new Error('MONGODB_URI is not defined in environment variables');
    }
    
    await mongoose.connect(process.env.MONGODB_URI);
    console.log('‚úÖ Connected to MongoDB');
  } catch (error) {
    console.error('‚ùå MongoDB connection error:', error);
    process.exit(1);
  }
}

async function seedCollections() {
  try {
    console.log('üå± Starting collections seeding...');

    // R√©cup√©rer le premier magasin actif
    const store = await Store.findOne({ isActive: true });
    if (!store) {
      console.error('‚ùå No active store found. Please create a store first.');
      return;
    }
    console.log(`üìç Using store: ${store.name} (${store._id})`);

    // R√©cup√©rer toutes les cat√©gories (pas seulement les actives)
    const categories = await Category.find({});
    console.log(`üìÇ Found ${categories.length} total categories`);
    
    const activeCategories = await Category.find({ isActive: true });
     console.log(`üìÇ Found ${activeCategories.length} active categories`);

    // Cr√©er un mapping des noms de cat√©gories vers les IDs
    const categoryMap = {};
    categories.forEach(cat => {
      categoryMap[cat.name] = cat._id;
      console.log(`üìÇ Category mapping: "${cat.name}" -> ${cat._id}`);
    });
    console.log(`üìã Available categories: ${Object.keys(categoryMap).join(', ')}`);

    // Supprimer les collections existantes pour ce magasin
    const deletedCount = await Collection.deleteMany({ storeId: store._id });
    console.log(`üóëÔ∏è Deleted ${deletedCount.deletedCount} existing collections`);

    // Cr√©er les nouvelles collections
    const createdCollections = [];
    
    for (const collectionData of collectionsData) {
      try {
        // Trouver la cat√©gorie correspondante
        console.log(`üîç Looking for category: "${collectionData.categoryName}"`);
        const categoryId = categoryMap[collectionData.categoryName];
        if (!categoryId) {
          console.warn(`‚ö†Ô∏è Category '${collectionData.categoryName}' not found, skipping collection '${collectionData.title}'`);
          console.log(`üìã Available categories: ${Object.keys(categoryMap).join(', ')}`);
          continue;
        }
        console.log(`‚úÖ Found category: "${collectionData.categoryName}" -> ${categoryId}`);

        // R√©cup√©rer quelques produits de cette cat√©gorie
        const products = await Product.find({ 
          category: categoryId, 
          store: store._id,
          status: 'active'
        }).limit(5);

        const collection = new Collection({
          title: collectionData.title,
          description: collectionData.description,
          imgSrc: collectionData.imgSrc,
          altText: collectionData.altText,
          heading: collectionData.heading,
          subheading: collectionData.subheading,
          price: collectionData.price,
          backgroundColor: collectionData.backgroundColor,
          featured: collectionData.featured,
          status: collectionData.status,
          storeId: store._id,
          category: categoryId,
          products: products.map(p => p._id),
          seoTitle: collectionData.seoTitle,
          seoDescription: collectionData.seoDescription,
          seoKeywords: collectionData.seoKeywords
        });

        await collection.save();
        createdCollections.push(collection);
        console.log(`‚úÖ Created collection: ${collection.title} (${products.length} products)`);
      } catch (error) {
        console.error(`‚ùå Error creating collection '${collectionData.title}':`, error.message);
      }
    }

    console.log(`\nüéâ Collections seeding completed!`);
    console.log(`üìä Summary:`);
    console.log(`   - Store: ${store.name}`);
    console.log(`   - Categories found: ${categories.length}`);
    console.log(`   - Collections created: ${createdCollections.length}`);
    console.log(`   - Featured collections: ${createdCollections.filter(c => c.featured).length}`);

    // Afficher quelques exemples
    console.log(`\nüìã Created collections:`);
    createdCollections.forEach((collection, index) => {
      console.log(`   ${index + 1}. ${collection.title} ${collection.featured ? '‚≠ê' : ''}`);
    });

  } catch (error) {
    console.error('‚ùå Error during collections seeding:', error);
  }
}

async function main() {
  await connectDB();
  await seedCollections();
  await mongoose.connection.close();
  console.log('\nüëã Database connection closed');
}

// Ex√©cuter le script
if (require.main === module) {
  main().catch(console.error);
}

module.exports = { seedCollections };